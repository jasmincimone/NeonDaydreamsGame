.index {
	background-image: url('images/NeonBackground.png');
	background-repeat: no-repeat;
	background-attachment: fixed;
	background-size: 100% 100%;
}

.page2{
	background-image: url('images/NeonBackground.png');
	background-repeat: no-repeat;
	background-attachment: fixed;
	background-size: 100% 100%;
}

.page3{
	background-image: url('images/NeonBackground.png');
	background-repeat: no-repeat;
	background-attachment: fixed;
	background-size: 100% 100%;
}

.grid{
	display:grid;
	grid-template-columns: 20% 40% 20% 20%;
	grid-template-rows: 15% 25% 25% 25% 10%;
	grid-gap: 5%;
	height: 100vh;
	/* padding: 25px; */
}

.header{
	grid-column: 1 / 4;
	grid-row: span 1;
	text-align: center;
	font-family: Impact;
	color: white;
	object-fit: contain;
}

.banner{
	height: 150%;
	width: 100%;
	margin-right: -4.6%;
	justify-content: center;
	object-fit: contain;
}

.welcomeVid{
	background-color: white;
	border: solid darkslateblue;
	grid-column: 1 / 2;
	grid-row: 2 / 3;
	
}

.video{
	height: 100%;
	width: 100%;
	object-fit: contain;
	display: flex;
}

.promptBox{
	background-color: white;
	border: solid darkslateblue;
	grid-column: 1 / 2;
	grid-row: 3 / 4;
	display: flex;
	flex-wrap: wrap;
	justify-content: center;
	align-items: center;
	font-family: Haettenschweiler, sans-serif;
	font-size: 25pt;
	font-weight: bold;
	text-align: center;
	color: rgb(161, 146, 201);
}

.welcome{
	object-fit: contain;
}

.btn{
	align-items: center;
	object-fit: contain;
}

#gamePrompts{
	object-fit: contain;
}

#gamePrompts2{
	object-fit: contain;
}

#gamePrompts3{
	object-fit: contain;
}

.gameBoard{
	/* background-color: white; */
	/* border: solid darkslateblue; */
	grid-column: 2 / 3;
	grid-row: 2 / 5;
}

.gameRules{
	background-color: white;
	border: solid rgb(97, 80, 211);
	color: rgb(161, 146, 201);
	text-align: center;
	grid-column: 3 / 4;
	grid-row: 2 / 4;
	font-family: Haettenschweiler, sans-serif;
	font-size: 100%;
	font-weight: bold;
	object-fit: contain;
}

.round1{
	width: 100%;
	height: 100%;
	margin: auto;
	padding: 10px;
	/* border: solid darkslateblue; */
	display: flex;
	flex-wrap: wrap;

	/* grid-template-columns: 50% 50%;
	grid-template-rows: 33% 33% 33%; */

	justify-content: center;
	position: relative;

	/* perspective added to produce 3D flip effect */
	perspective: 1000px;
	object-fit: contain;
}

.round2{
	width: 100%;
	height: 100%;
	margin: auto;
	padding: 10px;
	/* border: solid darkslateblue; */
	display: flex;
	flex-wrap: wrap;

	/* grid-template-columns: 50% 50%;
	grid-template-rows: 33% 33% 33%; */

	justify-content: center;
	position: relative;

	/* perspective added to produce 3D flip effect */
	perspective: 1000px;
	object-fit: contain;
}

.round3{
	width: 100%;
	height: 100%;
	margin: auto;
	padding: 10px;
	/* border: solid darkslateblue; */
	display: flex;
	flex-wrap: wrap;

	/* grid-template-columns: 50% 50%;
	grid-template-rows: 33% 33% 33%; */

	justify-content: center;
	position: relative;

	/* perspective added to produce 3D flip effect */
	perspective: 1000px;
	object-fit: contain;
}

.memory-card{
	display: inline-flex;
	object-fit: contain;
	width: 30%;
	height: 30%;
	margin: 5px;
	position: relative;

	/* box-shadow: 10px 10px 10px white; */
	transform: scale(1);

	/* transition applied with transform property to produce movement */
	transform-style: preserve-3d;

	transition: transform .5s;
	justify-content: space-around;
}

/* adds click effect that will be triggered every time element gets clicks and apply .2s transition */
.memory-card:active {
	transform: scale(0.97);
	transition: transform .2s;
}
/* flip class added to element rotates card 180 degrees */
.memory-card.flip{
	transform: rotateY(180deg);
}

.front-face, 
.back-face {
	width: 100%;
	height: 100%;
	padding: 30px;
	border-radius: 5px;
	object-fit: contain;
	/* absolute position sets both sides of card on top of each other */
	position: absolute;

	/* reveals image underneath it */
	backface-visibility: hidden;
}

/* this shows the image on the other side by turning the front-face 180 degrees  */
.front-face {
	transform: rotateY(180deg)
}

span{
	text-decoration: underline;
}

.hidden {
	display: none;
  }

.show {
	display: block;
  }

  .match{
	  width: 100px;
	  height: 100px;
  }
  